name: Render and upload manifests

on:
  workflow_dispatch:
    inputs:
      VERSION:
        required: true
        type: string
        description: The semantic version number.
      CR_FILE:
        type: string
        required: true
        description: The file name of the CR.
      CRD_FILE:
        type: string
        required: true
        description: The file name of the CRD.
    secrets:
      BOT_PAT:
        required: true
        description: The github personal access token of your bot.

jobs:
  render-and-upload-manifests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set Up Git
        env:
          BOT_PAT: ${{ secrets.BOT_PAT }}
          REPO: ${{ github.repository }}
        shell: bash
        run: |
          # set git username 
          ghusername=$(curl -s -H "Authorization: token ${BOT_PAT}" https://api.github.com/user)
          git config user.name "${ghusername}"
          # set git mail address
          ghmailaddress=$(curl -s -H "Authorization: token ${BOT_PAT}" https://api.github.com/email)
          git config user.email "${ghmailaddress}"
          # set remote url
          git remote set-url origin "https://x-access-token:${BOT_PAT}@github.com/${REPO}.git"

      - name: Render CRD
        env:
          VERSION: ${{ inputs.VERSION }}
          CRD_FILE: ${{ inputs.CRD_FILE }}
        shell: bash
        run: ./hack/scripts/render_crd.sh "${VERSION}" "${CRD_FILE}"

      - name: Print out CR file
        shell: bash
        run: cat "${CR_FILE}"

      - name: Print out CRD file
        shell: bash
        run: cat "${CRD_FILE}"

      - name: Upload manifests
        env:
          VERSION: ${{ inputs.VERSION }}
        shell: bash
        run: |
          gh release upload "${VERSION}"\
          "${CRD_FILE}"\
          "${CR_FILE}"
