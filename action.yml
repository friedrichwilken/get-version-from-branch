name: "get version from branch"
description: 'Generates a version "x.y.z". Current branch name must be "release-x.y". z will be generated from the highest existing tag "x.y.z-1"'
outputs:
  version-number:
    description: "Version number x.y.z"
    value: ${{ steps.generate-version.outputs.version }}
runs:
  using: "composite"
  steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - id: generate-version
      name: "Generate version number"
      shell: bash
      run: |
        #!/usr/bin/env bash
        # This script will generate the version.

        # Get the current branch name.
        current_branch=$(git rev-parse --abbrev-ref HEAD)

        # Check if the current branch is a release branch.
        if [[ $current_branch =~ ^release-([0-9]+)\.([0-9]+)$ ]]; then

          # Extract x and y from the branch name. BASH_REMATCH is an array variable
          # automatically generated by pattern matching ([[ ... ]]).
          x=${BASH_REMATCH[1]}
          y=${BASH_REMATCH[2]}

          # Find the highest z value for the matching tags.
          highest_z=$(git tag -l "$x.$y.*" | cut -d '.' -f 3 | sort -n | tail -n 1)

          # Increment the highest z value by 1 or set to 0 if no matching tags are found.
          next_z=$((highest_z + 1))
          if [ -z "$next_z" ]; then
            next_z=0
          fi

          # Return the new version.
          new_version="${x}.${y}.${next_z}"
          echo "${new_version}"
        else 
          echo "Not on a release branch."
          exit 1 
        fi
